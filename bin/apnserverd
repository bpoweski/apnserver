#!/usr/bin/env ruby
$LOAD_PATH.unshift(File.join(File.dirname(__FILE__), '..', 'lib'))

require 'getoptlong'
require 'rubygems'
require 'daemons'
require 'eventmachine'
require 'apnserver'
require 'apnserver/server'
require 'csv'

def usage
  puts "Usage: apnserverd [switches] --beanstalk a.b.c.d:11300,...,w.x.y.z:11300"
  puts " --beanstalk <127.0.0.1:11300>        csv list of ip:port for beanstalk servers"
  puts " --pid </var/run/apnserverd.pid       the path to store the pid"
  puts " --log </var/log/apnserverd.log       the path to store the log"
  puts " --daemon                             to daemonize the server"
  puts " --help                               this message"
end

def daemonize
  Daemonize.daemonize(@log_file, 'apnserverd')
  open(@pid_file,"w") { |f| f.write(Process.pid) }
  open(@pid_file,"w") do |f|
    f.write(Process.pid)
    File.chmod(0644, @pid_file)
  end
end

opts = GetoptLong.new(
  ["--beanstalk", "-b", GetoptLong::REQUIRED_ARGUMENT],
  ["--pid", "-i", GetoptLong::REQUIRED_ARGUMENT],
  ["--log", "-l", GetoptLong::REQUIRED_ARGUMENT],
  ["--help", "-h", GetoptLong::NO_ARGUMENT],
  ["--daemon", "-d", GetoptLong::NO_ARGUMENT]
)

beanstalks = ["127.0.0.1:11300"]
@pid_file = '/var/run/apnserverd.pid'
@log_file = '/var/log/apnserverd.log'
daemon = false

opts.each do |opt, arg|
  case opt
  when '--help'
    usage
    exit 1
  when '--beanstalk'
    beanstalks = CSV.parse(arg)[0]
  when '--pid'
    @pid_file = arg
  when '--log'
    @log_file = arg
  when '--daemon'
    daemon = true
  end
end

ApnServer::Config.logger = Logger.new(@log_file)

daemonize if daemon
server = ApnServer::Server.new(beanstalks) do |feedback_record|
  ApnServer::Config.logger.info "Received feedback at #{feedback_record[:feedback_at]} (length: #{feedback_record[:length]}): #{feedback_record[:device_token]}"
end
server.start!
